{"version":3,"sources":["shared/baseurl.js","components/NavbarComponent.js","components/HeaderComponent.js","components/HomeComponent.js","components/HomepageComponent.js","components/ErrorComponent.js","components/LoadingComponent.js","components/MenuCommponent.js","components/ChefComponent.js","components/AboutComponent.js","components/ContactComponent.js","components/CommentModalComponent.js","components/CommentsComponent.js","components/DishComponent.js","components/FooterComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/chefs.js","redux/forms.js","App.js","redux/configureStore.js","index.js"],"names":["baseUrl","base","NavToggle","props","toggleNav","setState","isNavOpen","state","className","Navbar","color","light","expand","NavbarBrand","href","src","alt","NavbarToggler","onClick","this","Collapse","isOpen","navbar","Nav","NavItem","to","Component","Header","Home","Homepage","Error","msg","Loading","Menu","dishes","isLoading","dishesLoading","errMsg","dishesErrMsg","MenuRender","menu","map","dish","Card","title","description","CardHeader","name","id","CardImg","image","CardBody","CardSubtitle","category","price","Chef","chef","chefs","CardTitle","designation","CardText","About","chefsLoading","chefsErrMsg","required","val","length","minLength","len","maxLength","isNumber","isNaN","Number","isEmail","test","Contact","style","textDecoration","width","height","model","onSubmit","values","firstname","lastname","contact","email","message","addFeedback","resetFeedbackForm","toast","warning","position","POSITION","TOP_CENTER","submitHandle","Row","Label","htmlFor","md","Col","text","placeholder","validators","show","field","touched","messages","size","offset","check","checkbox","select","disabled","selected","value","textarea","rows","type","maxlength","CommentModal","Modal","isCommentOpen","toggle","toggleCommentModal","ModalHeader","ModalBody","dishId","addComment","parseInt","rating","author","comment","handleSubmit","minlength","Button","Comments","comments","Media","tag","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","list","Dish","RenderDish","CardFooter","Footer","class","target","ADD_COMMENT","DISHES_LOADING","ADD_DISHES","DISHES_FAILED","CHEFS_LOADING","ADD_CHEFS","CHEFS_FAILED","ADD_COMMENTS","COMMENTS_FAILED","postComment","dispatch","newComment","toISOString","fetch","method","body","JSON","stringify","headers","credentials","then","response","ok","json","error","status","statusText","err","console","ActionType","payload","catch","dishesFailed","addDishes","chefsFailed","addChefs","addComments","commentsFailed","Main","dishwithId","match","filter","params","menuPage","fetchComments","aboutPage","fetchDishes","fetchChefs","path","component","exact","withRouter","connect","actions","reset","newFeedback","firstName","lastName","contactNo","agree","contactType","feedback","success","Dishes","action","commennts","concat","Chefs","InitialFeedback","App","configure","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.598b5a27.chunk.js","sourcesContent":["export const baseUrl = \"https://my-json-server.typicode.com/R-B1999/json-server/\";\r\nexport const base=\"https://raw.githubusercontent.com/R-B1999/json-server/master/public/\";","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, NavbarToggler, Nav, Collapse, NavItem } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { base } from '../shared/baseurl';\r\n\r\nclass NavToggle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false\r\n        };\r\n    }\r\n\r\n    toggleNav = () => {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"navbar__container\">\r\n                <Navbar className=\"shadow\" color=\"light\" light expand=\"md\">\r\n                    <div className=\"container-fluid\">\r\n\r\n                        <NavbarBrand className=\"logo offset-1\" href=\"/\">\r\n                            <img src={base + '/images/logo.png'} className=\"logo__img\" alt=\"COMIDA RÁPIDA\" />\r\n                        </NavbarBrand>\r\n\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar className=\"offset-md-1 offset-lg-3 offset-xl-5\">\r\n                            <Nav navbar>\r\n\r\n                                <NavItem className=\"nav_item\">\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">Home</NavLink>\r\n                                </NavItem>\r\n\r\n                                <NavItem className=\"nav_item\">\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">Menu</NavLink>\r\n                                </NavItem>\r\n\r\n                                <NavItem className=\"nav_item\">\r\n                                    <NavLink className=\"nav-link\" to=\"/about\">About</NavLink>\r\n                                </NavItem>\r\n\r\n                                <NavItem className=\"nav_item\">\r\n                                    <NavLink className=\"nav-link\" to=\"/contact\">Contact</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavToggle;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className=\"banner\">\r\n            <div className=\"banner__content\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-sm-11 col-md-9 col-lg-6 col-xl-5\">\r\n                            <div className=\"banner__text shadow\">\r\n                                <h3>Sedersi o portare via</h3>\r\n                                <h1>COMIDA RÁPIDA</h1>\r\n                                <p>If you have too, today’s your lucky day. Because I made this for you so that you never have to feel that frustration or waste that time again</p>\r\n                            </div>\r\n                            <Link to=\"/menu\" className=\"btn btn-lg __link\">Order Now</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { base } from '../shared/baseurl';\r\n\r\nexport const Home = () => {\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"home__content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row home__box justify-content-lg-around justify-content-center shadow\">\r\n                        <div className=\"col-10 col-sm-9 col-md-7 col-lg-6 col-xl-5\">\r\n                            <div className=\"flex py-5 my-2\">\r\n                                <h1>Welcome To The COMIDA RÁPIDA</h1>\r\n                                <p>If you like Streetfood, you will love Comida Rápida</p>\r\n                                <Link to=\"/about\" className=\"btn btn-lg __link\">Learn More</Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-10 col-sm-9 col-md-4 col-lg-5\">\r\n                            <div className=\"home__img py-4 px-1 row align-items-center justify-content-center\">\r\n                                <img src={base + '/images/donuts.jpg'} alt='DONUTS' />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Header } from './HeaderComponent';\r\nimport { Home } from './HomeComponent';\r\n\r\nexport const Homepage = () => {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Home />\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const Error = (props) => {\r\n    return (\r\n        <div className=\"error\">\r\n            <div className=\"container\">\r\n                <div className=\"row error__content py-auto\">\r\n                    <div className=\"col-12 text-center my-auto\">\r\n                        <span className=\"fa fa-exclamation-triangle fa-5x\" />\r\n                        <h2>{props.msg}</h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"loading\">\r\n            <div className=\"container\">\r\n                <div className=\"row loading__content py-auto\">\r\n                    <div className=\"col-12 text-center my-auto\">\r\n                        <span className=\"fa fa-spinner fa-pulse fa-5x fa-fw\" />\r\n                        <h2>Loading...</h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardImg, CardBody, CardSubtitle, CardHeader } from 'reactstrap';\r\nimport { base } from '../shared/baseurl';\r\nimport { Error } from './ErrorComponent';\r\nimport { Loading } from './LoadingComponent';\r\n\r\nexport const Menu = (props) => {\r\n    return (\r\n        <div className=\"menu\">\r\n            <div className=\"__header\">\r\n\r\n            </div>\r\n            <div className=\"menu__dishes\">\r\n                <div className=\"container\">\r\n                    <MenuRender dishes={props.dishes}\r\n                        isLoading={props.dishesLoading}\r\n                        errMsg={props.dishesErrMsg} />\r\n                    <div className=\"row\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst MenuRender = ({ dishes, isLoading, errMsg }) => {\r\n    const menu = dishes.map((dish) => {\r\n        return (\r\n            <div key={dish.id} className=\"col-12 col-sm-6 col-md-4 col-lg-3  p-1\">\r\n                <Card title={dish.description} >\r\n                    <CardHeader>{dish.name}</CardHeader>\r\n                    <Link to={`/menu/${dish.id}`}>\r\n                        <CardImg src={base + dish.image}></CardImg>\r\n                    </Link>\r\n                    <CardBody>\r\n                        <CardSubtitle className=\"row\">\r\n                            <div className=\"col-auto\">{dish.category}</div>\r\n                            <div className=\"col-auto ml-auto\">{dish.price}</div>\r\n                        </CardSubtitle>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    } else if (errMsg) {\r\n        return (\r\n            <Error msg={errMsg} />\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"row m-2 p-2 shadow\">\r\n                {menu}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport { Card, CardBody, CardHeader, CardImg, CardText, CardTitle } from 'reactstrap'\r\nimport { base } from '../shared/baseurl';\r\nimport { Error } from './ErrorComponent';\r\nimport { Loading } from './LoadingComponent';\r\n\r\nexport const Chef = (props) => {\r\n    const chef = props.chefs.map((chef) => {\r\n        return (\r\n            <div key={chef.id} className=\"col-10 col-sm-11 col-md-6 col-lg-4 p-3\">\r\n                <Card className=\"shadow chef__card\">\r\n                    <CardHeader>{chef.name}</CardHeader>\r\n                    <CardImg src={base + chef.image} alt={chef.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{chef.designation}</CardTitle>\r\n                        <CardText>{chef.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (props.isLoading) {\r\n        return (\r\n            <Loading />\r\n        )\r\n    } else if (props.errMsg) {\r\n        return (\r\n            <Error msg={props.errMsg} />\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"chef\">\r\n                <div className=\"container\">\r\n                    <div className=\"row py-3\">\r\n                        <h2>Our Honourable Chefs</h2>\r\n                    </div>\r\n                    <div className=\"row justify-content-around chef__content mb-3 p-2 shadow\">\r\n                        {chef}\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Chef } from './ChefComponent';\r\n\r\nexport const About = (props) => {\r\n    return (\r\n        <div>\r\n            <div className=\"about\">\r\n                <div className=\"container\">\r\n                    <div className=\"__header\"></div>\r\n                    <div className=\"row justify-content-center about__content shadow\">\r\n                        <div className=\"col-10\">\r\n                            <p>\r\n                                Our restaurant brands are built on key customer insights.\r\n                                The Indian dining experience where food is synonymous with entertainment is our chief inspiration.\r\n                            </p>\r\n                            <p>\r\n                                The culinary and experiential diversity of these restaurant brands reflect the rich diversity of those who visit our restaurants.\r\n                                At each of our restaurant brands, the experience differs.\r\n                            </p>\r\n                            <p>\r\n                                All the details are linked to the brand experience- the menu, ambience, team culture and even the marketing.\r\n                                We believe that focusing on enhancing our guest experience will help create brands that have the greatest impact on our customers.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                </div>\r\n                <Chef\r\n                    chefs={props.chefs}\r\n                    isLoading={props.chefsLoading}\r\n                    errMsg={props.chefsErrMsg}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Row, Label, Col, Button } from 'reactstrap';\r\nimport { Form, Control, Errors, actions } from 'react-redux-form';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst required = (val) => val && val.length;\r\nconst minLength = (len) => (val) => !val || (val.length >= len);\r\nconst maxLength = (len) => (val) => !val || (val.length <= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\n// const isEmail = (val) => /^[A-Za-z0-9._]+@[A-Za-z0-9._]+\\.[A-Za-z]{2-4}$/i.test(val);\r\nconst isEmail = (val) => /^\\S+@\\S+\\.\\S+$/i.test(val);\r\n\r\n\r\nexport const Contact = (props) => {\r\n\r\n    const submitHandle = (values) => {\r\n        // alert(JSON.stringify(values));\r\n\r\n        if (values.firstname && values.lastname && values.contact && values.email && values.message) {\r\n\r\n            props.addFeedback(values);\r\n            props.resetFeedbackForm();\r\n        } else {\r\n            toast.warning(\"fill all fields\", { position: toast.POSITION.TOP_CENTER });\r\n        }\r\n\r\n        // return(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"contact\">\r\n            <div className=\"container\">\r\n                <div className=\"__header \" />\r\n                <div className=\"row row-content bg-success text-light p-2 shadow m-2\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Location Information</h2>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-5 offset-sm-1\">\r\n                        <h4>Our Address</h4>\r\n                        <address><p className=\"py-2\">\r\n                            100ft road, near Ghore Wala Chowk,<br />\r\n                        Bathinda, 151001<br />\r\n                        Punjab, India<br />\r\n                            <i className=\"fa fa-phone\"></i> : +91 90568 08352<br />\r\n                            <i className=\"fa fa-envelope\"></i> : <a href=\"mailto:rk1484990@gmail.com\" style={{ textDecoration: \"none\", color: \"white\" }}>rk1484990@gmail.com</a>\r\n                        </p></address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6\">\r\n                        <iframe src=\"https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d55165.56880555824!2d74.949515!3d30.212884!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x391732a35afcc18f%3A0x3294aa2abf6bea1e!2sBatinda%2C%20Bathinda%2C%20Punjab%20151001!5e0!3m2!1sen!2sin!4v1612627908261!5m2!1sen!2sin\" width=\"100%\" height=\"100%\"></iframe>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <h2>Contact us</h2>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6\">\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"form\">\r\n                    <Form model=\"feedback\" onSubmit={(values) => submitHandle(values)}>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".firstname\"\r\n                                    id=\"firstname\"\r\n                                    name=\"firstname\"\r\n                                    placeholder=\"First Name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required,\r\n                                        minLength: minLength(3),\r\n                                        maxLength: maxLength(15)\r\n                                    }} />\r\n                                <Errors model=\".firstname\"\r\n                                    className=\"text-danger\"\r\n                                    show={(field) => field.touched}\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: '3 characters atleast',\r\n                                        maxLength: 'Maximum 15 characters'\r\n                                    }} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".lastname\"\r\n                                    id=\"lastname\"\r\n                                    name=\"lastname\"\r\n                                    placeholder=\"Last Name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required\r\n                                    }} />\r\n                                <Errors model=\".lastname\"\r\n                                    className=\"text-danger\"\r\n                                    show={(field) => field.touched}\r\n                                    messages={{\r\n                                        required: \"Required\"\r\n                                    }} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"contact\" md={2}>Contact No.</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".contact\"\r\n                                    id=\"contact\"\r\n                                    name=\"contact\"\r\n                                    placeholder=\"Contact No.\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required,\r\n                                        isNumber,\r\n                                        minLength: minLength(10),\r\n                                        maxLength: maxLength(10)\r\n                                    }} />\r\n                                <Errors model=\".contact\"\r\n                                    className=\"text-danger\"\r\n                                    show={(field) => field.touched}\r\n                                    messages={{\r\n                                        required: \"Required\",\r\n                                        isNumber: \"Must be only digits\",\r\n                                        minLength: \"Not less than 10 digits\",\r\n                                        maxLength: \"Not more than 10 digits\"\r\n\r\n                                    }} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"email\" md={2}>Email ID</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".email\"\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    placeholder=\"Email Address\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required,\r\n                                        isEmail\r\n                                    }} />\r\n                                <Errors model=\".email\"\r\n                                    className=\"text-danger\"\r\n                                    show={(field) => field.touched}\r\n                                    messages={{\r\n                                        required: \"Required\",\r\n                                        isEmail: \"Provide correct email\"\r\n                                    }} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col md={{ size: 6, offset: 2 }}>\r\n                                <div className=\"form-check\">\r\n                                    <Label check>\r\n                                        <Control.checkbox model=\".agree\"\r\n                                            name=\"agree\"\r\n                                            className=\"form-check-input\" />{' '}\r\n                                        <strong>May we contact you?</strong>\r\n                                    </Label>\r\n                                </div>\r\n                            </Col>\r\n                            <Col md={{ size: 3, offset: 1 }}>\r\n                                <Control.select model=\".contactType\"\r\n                                    name=\"contactType\"\r\n                                    className=\"form-control\">\r\n                                    <option disabled selected value=\"none\">Select one</option>\r\n                                    <option value=\"contact\">Tel.</option>\r\n                                    <option value=\"email\">Email</option>\r\n                                </Control.select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                            <Col md={10}>\r\n                                <Control.textarea model=\".message\"\r\n                                    id=\"message\"\r\n                                    name=\"message\"\r\n                                    rows=\"10\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required\r\n                                    }} />\r\n                                <Errors model=\".message\"\r\n                                    className=\"text-danger\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: \"Required\"\r\n                                    }} />\r\n                            </Col>\r\n                        </Row><Row className=\"form-group\">\r\n                            <Col md={{ size: 10, offset: 2 }}>\r\n                                <button type=\"submit\" value=\"submit\" className=\"btn btn-lg btn-outline-primary\">Submit</button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Label, Modal, ModalBody, ModalHeader, Row, Button } from 'reactstrap';\r\n\r\nconst handleSubmit = (values, toggleCommentModal, dishId, addComment) => {\r\n    toggleCommentModal();\r\n    addComment(dishId, parseInt(values.rating), values.author, values.comment);\r\n}\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxlength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minlength = (len) => (val) => !val || (val.length >= len);\r\n\r\nexport const CommentModal = (props) => {\r\n    return (\r\n        <Modal isOpen={props.isCommentOpen} toggle={props.toggleCommentModal}>\r\n            <ModalHeader toggle={props.toggleCommentModal}>Add Comment</ModalHeader>\r\n            <ModalBody>\r\n                <LocalForm onSubmit={(values => handleSubmit(values, props.toggleCommentModal, props.dishId, props.addComment))}>\r\n\r\n                    <Row className=\"form-group\">\r\n                        <Label htmlFor=\"rating\">Rating</Label>\r\n                        <Control.select model=\".rating\" id=\"rating\" name=\"rating\" className=\"form-control\"\r\n                            validators={{\r\n                                required\r\n                            }}>\r\n                            <option selected disabled>Select Ratings</option>\r\n                            <option value=\"5\">5</option>\r\n                            <option value=\"4\">4</option>\r\n                            <option value=\"3\">3</option>\r\n                            <option value=\"2\">2</option>\r\n                            <option value=\"1\">1</option>\r\n                        </Control.select>\r\n                        <Errors\r\n                            className=\"text-danger\"\r\n                            model=\".rating\"\r\n                            show={(field) => field.touched}\r\n                            messages={{\r\n                                required: \"Please Provide ratings\"\r\n                            }} />\r\n                    </Row>\r\n\r\n                    <Row className=\"form-group\">\r\n                        <Label htmlFor=\"author\">Your Name</Label>\r\n                        <Control.text model=\".author\" id=\"author\" name=\"author\" className=\"form-control\"\r\n                            validators={{\r\n                                required,\r\n                                minlength: minlength(3),\r\n                                maxlength: maxlength(15)\r\n                            }} />\r\n                        <Errors\r\n                            className=\"text-danger\"\r\n                            model=\".author\"\r\n                            show={(field) => field.touched}\r\n                            messages={{\r\n                                required: \"Required\",\r\n                                minlength: \"Must be greater than 2 characters\",\r\n                                maxlength: \"Must be 15 characters or less\"\r\n                            }} />\r\n                    </Row>\r\n\r\n                    <Row className=\"form-group\">\r\n                        <Label htmlFor=\"comment\">Commment</Label>\r\n                        <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" rows=\"4\" className=\"form-control\"\r\n                            validators={{\r\n                                required\r\n                            }} />\r\n                        <Errors\r\n                            className=\"text-danger\"\r\n                            model=\".comment\"\r\n                            show={(field) => field.touched}\r\n                            messages={{\r\n                                required: \"Required\"\r\n                            }} />\r\n                    </Row>\r\n\r\n                    <Button type=\"submit\" name=\"submit\" className=\"__link\" color=\"blue\">Submit</Button>\r\n\r\n                </LocalForm>\r\n            </ModalBody>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Media } from 'reactstrap';\r\nimport { CommentModal } from \"./CommentModalComponent\";\r\n\r\nclass Comments extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isCommentOpen: false\r\n        }\r\n    }\r\n\r\n    toggleCommentModal = () => {\r\n        this.setState({\r\n            isCommentOpen: !this.state.isCommentOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const comments = this.props.comments.map((comment) => {\r\n            return (\r\n                <div key={comment.id} className=\"row p-2 justify-content-center\">\r\n                    <div className=\"col-md-8 row shadow\">\r\n                        <div className=\"col-sm-auto\">\r\n                            <Media tag=\"li\">\r\n                                <h4>—{comment.author}</h4>\r\n                            </Media>\r\n                        </div>\r\n                        <div className=\"col-sm-auto ml-auto\">\r\n                            <h6>\r\n                                {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}\r\n                            </h6>\r\n                        </div>\r\n                        <div className=\"col-11 offset-1\">\r\n                            <Media tag=\"li\">\r\n                                <p>{comment.comment}</p>\r\n                            </Media>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"container comment\">\r\n                {/* <h1 onClick={()=>this.props.fetchComments(this.props.dishId)}>Comments</h1> */}\r\n                    <h1>comment</h1>\r\n                    <hr />\r\n                    <Media list>\r\n                        {comments}\r\n                    </Media>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-auto mx-auto\">\r\n                            <a onClick={this.toggleCommentModal} className=\"btn btn-lg __link mb-3\">Add Comment</a>\r\n                            <CommentModal\r\n                                isCommentOpen={this.state.isCommentOpen}\r\n                                toggleCommentModal={() => { this.toggleCommentModal() }}\r\n                                addComment={this.props.addComment}\r\n                                dishId={this.props.dishId}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Comments;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardBody, CardFooter, CardHeader, CardImg, CardSubtitle, CardTitle } from 'reactstrap';\r\nimport { base } from '../shared/baseurl';\r\nimport Comments from './CommentsComponent';\r\nimport { Error } from './ErrorComponent';\r\nimport { Loading } from './LoadingComponent';\r\n\r\n\r\nexport const Dish = (props) => {\r\n    if (props.dishesLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    } else if (props.dishesErrMsg) {\r\n        return (\r\n            <Error msg={props.dishesErrMsg} />\r\n        );\r\n    } else if (props.dish != null) {\r\n        return (\r\n            <RenderDish \r\n            dish={props.dish}\r\n            comments={props.comments}\r\n            // fetchComments={props.fetchComments}\r\n            addComment={props.addComment}\r\n            />\r\n        );\r\n    } else {\r\n        return (\r\n            <div />\r\n        );\r\n    }\r\n}\r\n\r\nconst RenderDish = (props) => {\r\n    return (\r\n        <div className=\"dish__content\">\r\n            <div className=\"__header\" />\r\n            <div className=\"container\">\r\n\r\n                <Card className=\"dish__card shadow p-2\">\r\n                    <div className=\"row justify-content-center \">\r\n\r\n                        <div className=\"col-10 col-md-7 img\">\r\n                            <CardImg src={base+props.dish.image} className=\"my-auto shadow\" />\r\n                        </div>\r\n\r\n                        <div className=\"col-10 col-md-5 my-auto dish__detail\">\r\n                            <CardHeader>{props.dish.name}</CardHeader>\r\n\r\n                            <CardBody className=\"shadow\">\r\n                                <CardTitle className=\"row\">\r\n                                    <div className=\"col-auto mr-auto\">{props.dish.type}</div>\r\n                                    <div className=\"col-auto ml-sm-auto\">{props.dish.category}</div>\r\n                                </CardTitle>\r\n\r\n                                <CardSubtitle>{props.dish.description}</CardSubtitle>\r\n\r\n                                <CardFooter className=\"row\">\r\n                                    <div className=\"ml-auto\">{props.dish.price}</div>\r\n                                </CardFooter>\r\n                            </CardBody>\r\n                            <Link className=\"btn btn-lg __link my-3\">Place Order</Link>\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n                <hr />\r\n\r\n                <Comments\r\n                    comments={props.comments}\r\n                    dishId={props.dish.id}\r\n                    addComment={props.addComment}\r\n                    // fetchComments={props.fetchComments}\r\n                />\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <div className=\"bg-light shadow\">\r\n            <hr />\r\n            <div className=\"container footer\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div class=\"social-network social-circle\">\r\n                            <a target=\"_blank\" href=\"https://www.facebook.com/profile.php?id=100006249466558\" class=\"icoFacebook mx-2\" title=\"Facebook\"><i class=\"fa fa-facebook\"></i></a>\r\n                            <a target=\"_blank\" href=\"https://twitter.com/BansalRahul31\" class=\"icoTwitter mx-2\" title=\"Twitter\"><i class=\"fa fa-twitter\"></i></a>\r\n                            <a target=\"_blank\" href=\"https://currents.google.com/115749062198295796415\" class=\"icoGoogle mx-2\" title=\"Google +\"><i class=\"fa fa-google\"></i></a>\r\n                            <a target=\"_blank\" href=\"https://www.linkedin.com/in/rahul-bansal-8a77a8161/\" class=\"icoLinkedin mx-2\" title=\"Linkedin\"><i class=\"fa fa-linkedin\"></i></a>\r\n                            <a target=\"_blank\" href=\"https://www.instagram.com/_bansal_rahul/\" class=\"icoInstagram mx-2\" title=\"Instagram\"><i class=\"fa fa-instagram\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6 order-md-first\">\r\n                        <p className=\"py-2\">© Copyright 2021 | COMIDA RÁPIDA</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const DISHES_LOADING = \"DISHES_LOADING\";\r\nexport const ADD_DISHES = \"ADD_DISHES\";\r\nexport const DISHES_FAILED = \"DISHES_FAILED\";\r\nexport const CHEFS_LOADING = \"CHEFS_LOADING\";\r\nexport const ADD_CHEFS = \"ADD_CHEFS\";\r\nexport const CHEFS_FAILED = \"CHEFS_FAILED\";\r\nexport const ADD_COMMENTS = \"ADD_COMMENTS\";\r\nexport const COMMENTS_FAILED = \"COMMENTS_FAILED\";","import * as ActionType from \"./ActionTypes\";\r\nimport { baseUrl } from \"../shared/baseurl\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionType.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const addFeedback = (values) => (dispatch) => {\r\n    const newFeedback = {\r\n        firstName: values.firstname,\r\n        lastName: values.lastname,\r\n        contactNo: values.contact,\r\n        email: values.email,\r\n        agree: values.agree,\r\n        contactType: values.contactType,\r\n        feedback: values.message\r\n    }\r\n    newFeedback.date = new Date().toISOString();\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: \"same-origin\"\r\n    }).then(response => {\r\n        if (response.ok) {\r\n            return toast.success(\"Feedback submitted\", {position: toast.POSITION.TOP_CENTER});\r\n        } else {\r\n            let error = new Error(\"Error \" + response.status + \":\" + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    }, err => {\r\n        let errMsg = new Error(err.message);\r\n        console.error(errMsg);\r\n        throw errMsg;\r\n    }).catch(err => {\r\n        toast.error(\"ERROR : feedback not submitted.\", {position: toast.POSITION.TOP_CENTER})\r\n    });\r\n}\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n    newComment.date = new Date().toISOString();\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: \"same-origin\"\r\n    }).then(response => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        } else {\r\n            let error = new Error(\"Error \" + response.status + \":\" + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    }, err => {\r\n        let errMsg = new Error(err.message);\r\n        console.error(errMsg);\r\n        throw errMsg;\r\n    }).then(comment => {\r\n        dispatch(addComment(comment))\r\n    }).catch(err => {\r\n        dispatch(dishesFailed(err.message))\r\n    });\r\n}\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes').then(response => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        } else {\r\n            let error = new Error(\"Error \" + response.status + \":\" + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    }, err => {\r\n        let errMsg = new Error(err.message);\r\n        console.error(errMsg);\r\n        throw errMsg;\r\n    }).then(dishes => {\r\n        dispatch(addDishes(dishes))\r\n    }).catch(err => {\r\n        dispatch(dishesFailed(err.message))\r\n    });\r\n\r\n};\r\n\r\nconst dishesLoading = () => ({\r\n    type: ActionType.DISHES_LOADING\r\n});\r\n\r\nconst dishesFailed = (errMsg) => ({\r\n    type: ActionType.DISHES_FAILED,\r\n    payload: errMsg\r\n});\r\n\r\nconst addDishes = (dishes) => ({\r\n    type: ActionType.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchChefs = () => (dispatch) => {\r\n    dispatch(chefsLoading(true));\r\n\r\n    return fetch(baseUrl + 'chefs').then(response => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        } else {\r\n            let error = new Error(\"Error \" + response.status + \":\" + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    }, err => {\r\n        let errMsg = new Error(err.message);\r\n        console.error(errMsg);\r\n        throw errMsg;\r\n    }).then(chefs => {\r\n        dispatch(addChefs(chefs))\r\n    }).catch(err => {\r\n        dispatch(chefsFailed(err.message))\r\n    });\r\n\r\n};\r\n\r\nconst chefsLoading = () => ({\r\n    type: ActionType.CHEFS_LOADING\r\n});\r\n\r\nconst chefsFailed = (errMsg) => ({\r\n    type: ActionType.CHEFS_FAILED,\r\n    payload: errMsg\r\n});\r\n\r\nconst addChefs = (chefs) => ({\r\n    type: ActionType.ADD_CHEFS,\r\n    payload: chefs\r\n});\r\n\r\n\r\nexport const fetchComments = (dishId) => (dispatch) => {\r\n    return fetch(baseUrl + 'comments').then(response => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        } else {\r\n            let error = new Error(\"Error \" + response.status + \":\" + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    }, err => {\r\n        let errMsg = new Error(err.message);\r\n        console.error(errMsg);\r\n        throw errMsg;\r\n    }).then(comments => {\r\n        dispatch(addComments(comments))\r\n    }).catch(err => {\r\n        dispatch(commentsFailed(err.message))\r\n    });\r\n\r\n};\r\n\r\nconst addComments = (comments) => ({\r\n    type: ActionType.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nconst commentsFailed = (errMsg) => ({\r\n    type: ActionType.COMMENTS_FAILED,\r\n    payload: errMsg\r\n});","import React, { Component } from 'react';\r\nimport NavToggle from './NavbarComponent';\r\nimport { Homepage } from './HomepageComponent';\r\nimport { Menu } from './MenuCommponent';\r\nimport { About } from './AboutComponent';\r\nimport { Contact } from './ContactComponent';\r\nimport { Dish } from \"./DishComponent\";\r\nimport { Footer } from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from \"react-redux-form\";\r\nimport { postComment, fetchDishes, fetchChefs, fetchComments, addFeedback } from \"../redux/ActionCreators\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        chefs: state.chefs\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n        fetchDishes: () => dispatch(fetchDishes()),\r\n        fetchChefs: () => dispatch(fetchChefs()),\r\n        fetchComments: (dishId) => dispatch(fetchComments(dishId)),\r\n        resetFeedbackForm: () => dispatch(actions.reset('feedback')),\r\n        addFeedback: (values) => dispatch(addFeedback(values))\r\n    }\r\n}\r\n\r\nclass Main extends Component {\r\n\r\n    dishwithId = ({ match }) => {\r\n        return (\r\n            <Dish\r\n                dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId))[0]}\r\n                // comments={this.props.comments.comments}\r\n                comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId))}\r\n                // fetchComments={this.props.fetchComments}\r\n                addComment={this.props.addComment}\r\n                dishesLoading={this.props.dishes.isLoading}\r\n                dishesErrMsg={this.props.dishes.errMsg}\r\n            />\r\n        );\r\n    }\r\n\r\n    menuPage = () => {\r\n        return (\r\n            <Menu\r\n                dishesLoading={this.props.dishes.isLoading}\r\n                dishes={this.props.dishes.dishes}\r\n                dishesErrMsg={this.props.dishes.errMsg}\r\n                fetchComments={this.props.fetchComments}\r\n            />\r\n        );\r\n    }\r\n\r\n    aboutPage = () => {\r\n        return (\r\n            <About\r\n                chefsLoading={this.props.chefs.isLoading}\r\n                chefs={this.props.chefs.chefs}\r\n                chefsErrMsg={this.props.chefs.errMsg}\r\n            />\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchChefs();\r\n        this.props.fetchComments(0);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavToggle />\r\n\r\n                <Switch>\r\n                    <Route path=\"/home\" component={Homepage} />\r\n                    <Route exact path=\"/menu\" component={this.menuPage} />\r\n                    <Route exact path=\"/about\" component={this.aboutPage} />\r\n                    <Route exact path=\"/contact\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} addFeedback={this.props.addFeedback} />} />\r\n                    <Route path=\"/menu/:dishId\" component={this.dishwithId} />\r\n                    <Redirect to=\"/home\" />\r\n                </Switch>\r\n\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionType from \"./ActionTypes\";\r\n\r\nexport const Dishes = (state = {\r\n    isLoading: true,\r\n    errMsg: null,\r\n    dishes: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionType.DISHES_LOADING:\r\n            return { ...state, isLoading: true, errMsg: null, dishes: [] };\r\n\r\n        case ActionType.ADD_DISHES:\r\n            return { ...state, isLoading: false, errMsg: null, dishes: action.payload };\r\n\r\n        case ActionType.DISHES_FAILED:\r\n            return { ...state, isLoading: false, errMsg: action.payload, dishes: [] };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionType from \"./ActionTypes\";\r\n\r\nexport const Comments = (state = {\r\n    errMsg: null,\r\n    comments: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionType.ADD_COMMENTS:\r\n            return { ...state, errMsg: null, comments: action.payload };\r\n\r\n        case ActionType.COMMENTS_FAILED:\r\n            return { ...state, errMsg: action.payload, commennts: [] };\r\n\r\n        case ActionType.ADD_COMMENT:\r\n            let comment = action.payload;\r\n            // comment.id = state.length;\r\n            // comment.date = new Date().toISOString();\r\n            return { ...state, comments: state.comments.concat(comment), errMsg: null };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionType from \"./ActionTypes\";\r\n\r\nexport const Chefs = (state = {\r\n    isLoading: true,\r\n    errMsg: null,\r\n    chefs: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionType.CHEFS_LOADING:\r\n            return { ...state, isLoading: true, errMsg: null, chefs: [] };\r\n\r\n        case ActionType.ADD_CHEFS:\r\n            return { ...state, isLoading: false, errMsg: null, chefs: action.payload };\r\n\r\n        case ActionType.CHEFS_FAILED:\r\n            return { ...state, isLoading: false, errMsg: action.payload, chefs: [] };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","export const InitialFeedback={\r\n    firstname:\"\",\r\n    lastname:\"\",\r\n    contact:\"\",\r\n    email:\"\",\r\n    agree:false,\r\n    contactType:\"none\",\r\n    message:\"\"\r\n}","import './App.css';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nimport {toast} from 'react-toastify';\n\n\nfunction App() {\n    toast.configure();\n    return (\n        <Provider store={ConfigureStore()}>\n            <BrowserRouter>\n                <div>\n                    <Main />\n                </div>\n            </BrowserRouter>\n        </Provider>\n    );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from \"react-redux-form\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport { Dishes } from \"./dishes\";\r\nimport { Comments } from \"./comments\";\r\nimport { Chefs } from \"./chefs\";\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            chefs: Chefs,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n    return store;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}